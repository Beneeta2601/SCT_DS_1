# -*- coding: utf-8 -*-
"""Internship Task 1

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vJNS0lqXvSVObd7xPJY7wAeEbH4cG9y4
"""

import matplotlib.pyplot as plt
import zipfile
import pandas as pd
from io import BytesIO, TextIOWrapper

def extract_data_from_zip(zip_file_path):

    with zipfile.ZipFile(zip_file_path, 'r') as zip_ref:

        csv_files = [f for f in zip_ref.namelist() if f.lower().endswith('.csv')]

        if not csv_files:
            raise ValueError("No CSV files found in the ZIP archive")


        for csv_file in csv_files:
            with zip_ref.open(csv_file) as file:
                try:

                    try:
                        df = pd.read_csv(TextIOWrapper(file, 'utf-8'))
                    except:
                        file.seek(0)
                        df = pd.read_csv(BytesIO(file.read()))


                    clean_df = identify_and_clean_data(df)
                    if clean_df is not None:
                        return clean_df

                except Exception as e:
                    print(f"Could not read {csv_file}: {str(e)}")
                    continue


    print("Warning: Could not find population data in CSV files. Using sample data.")
    return pd.DataFrame({
        'Age Group': ['0-20 Years', '21-44 Years', '45+ Years'],
        'Percentage': [34.1, 57.0, 6.7]
    })

def identify_and_clean_data(df):

    str_df = df.astype(str)


    age_col = None
    percent_col = None

    for col in str_df.columns:
        lower_col = col.lower()
        if 'age' in lower_col or 'group' in lower_col:
            age_col = col
        elif '%' in lower_col or 'percent' in lower_col:
            percent_col = col


    if age_col and percent_col:
        data = df[[age_col, percent_col]].copy()
        data.columns = ['Age Group', 'Percentage']


        if data['Percentage'].dtype == 'object':
            data['Percentage'] = data['Percentage'].str.replace('%', '').astype(float)


        data['Age Group'] = data['Age Group'].astype(str).str.strip()


        target_groups = ['0-20', '21-44', '45+']
        filtered = []

        for group in target_groups:
            match = data[data['Age Group'].str.contains(group, case=False)]
            if not match.empty:
                filtered.append(match.iloc[0])

        if len(filtered) >= 2:  # At least 2 matches
            return pd.DataFrame(filtered).reset_index(drop=True)


        return data.head(3)

    return None

def create_population_chart(data):
    """Create a bar chart from the population data"""
    plt.figure(figsize=(10, 6))
    colors = ['#1f77b4', '#ff7f0e', '#2ca02c']  # Matplotlib default colors
    bars = plt.bar(data['Age Group'], data['Percentage'], color=colors)

    plt.title('India Population Distribution by Age (2022)', fontsize=14)
    plt.xlabel('Age Groups', fontsize=12)
    plt.ylabel('Percentage (%)', fontsize=12)
    plt.ylim(0, max(data['Percentage']) * 1.2)

    if any(len(str(x)) > 8 for x in data['Age Group']):
        plt.xticks(rotation=45, ha='right')


    for bar in bars:
        height = bar.get_height()
        plt.text(bar.get_x() + bar.get_width()/2., height,
                f'{height:.1f}%',
                ha='center', va='bottom')

    plt.grid(axis='y', alpha=0.3)
    plt.tight_layout()
    return plt


from google.colab import files

# Upload the ZIP file
uploaded = files.upload()
zip_filename = next(iter(uploaded))


try:
    population_data = extract_data_from_zip(zip_filename)
    print("Extracted Population Data:")
    print(population_data)

    chart = create_population_chart(population_data)
    chart.show()
except Exception as e:
    print(f"Error: {str(e)}")
    print("Please check the ZIP file contains a CSV file with population data")

from google.colab import files

# Upload the ZIP file
uploaded = files.upload()
zip_filename = next(iter(uploaded))

# Process and visualize
population_data = extract_data_from_zip(zip_filename)
chart = create_population_chart(population_data)
chart.show()